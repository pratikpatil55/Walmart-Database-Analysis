CREATE DATABASE WALMARTSALES;
USE WALMARTSALES;

CREATE TABLE CUSTOMER_TABLE
(INVOICE_ID VARCHAR (20) NOT NULL PRIMARY KEY,
CUSTOMER VARCHAR(20) NOT NULL,
GENDER VARCHAR(10) NOT NULL,
CITY VARCHAR(20) NOT NULL,
BRANCH VARCHAR(5) NOT NULL 
);
SELECT * FROM CUSTOMER_TABLE;

CREATE TABLE PRODUCT_TABLE
(INVOICE_ID VARCHAR (20) NOT NULL,
PRODUCT_CATEGORY VARCHAR(30) NOT NULL,
UNIT_PRICE DECIMAL(10,2) NOT NULL,
RATING FLOAT(2,1)
);
SELECT * FROM PRODUCT_TABLE;

CREATE TABLE ORDER_TABLE
(INVOICE_ID VARCHAR(20) NOT NULL,
DATE DATETIME NOT NULL,
QUANTITY INT NOT NULL,
PAYMENT VARCHAR(20) NOT NULL,
TOTAL DECIMAL(12,4) NOT NULL 
);
SELECT * FROM ORDER_TABLE;

/* 1. HOW MANY UNIQUE CITIES DOES THE DATABASE HAVE?*/
SELECT DISTINCT(CITY) FROM CUSTOMER_TABLE;

/* 2. WHAT IS THE MOST SELLING PRODUCT CATEGORY ?*/
SELECT MAX(PRODUCT_TABLE.PRODUCT_CATEGORY) AS PRODUCT,SUM(ORDER_TABLE.QUANTITY) AS QUANTITY 
FROM PRODUCT_TABLE
JOIN ORDER_TABLE ON PRODUCT_TABLE.INVOICE_ID = ORDER_TABLE.INVOICE_ID ;

/* 3. WHAT IS TOTAL REVENUE BY CITY?*/
SELECT CUSTOMER_TABLE.CITY,SUM(ORDER_TABLE.TOTAL) AS REVENUE
FROM CUSTOMER_TABLE LEFT JOIN ORDER_TABLE
ON CUSTOMER_TABLE.INVOICE_ID = ORDER_TABLE.INVOICE_ID
GROUP BY CITY;

/* 4. WHICH FIVE PRODUCTS CATEGORY HAD LARGEST REVENUE?*/
SELECT PRODUCT_TABLE.PRODUCT_CATEGORY AS PRODUCT,SUM(ORDER_TABLE.TOTAL) AS REVENUE
FROM PRODUCT_TABLE LEFT JOIN ORDER_TABLE
ON PRODUCT_TABLE.INVOICE_ID = ORDER_TABLE.INVOICE_ID
GROUP BY PRODUCT 
ORDER BY REVENUE DESC LIMIT 5;

/* 5. WHAT IS AVERAGE RATING OF EACH PRODUCT CATEGORY?*/
SELECT PRODUCT_CATEGORY AS CATEGORY,AVG(RATING) AS RATINGS 
FROM PRODUCT_TABLE GROUP BY CATEGORY;

/* 6. HOW MANY UNIQUE PAYMENT METHODS ARE THERE?*/
SELECT DISTINCT PAYMENT FROM ORDER_TABLE;

/* 7. WHICH CUSTOMER TYPE BUYS MOST?*/
SELECT CUSTOMER_TABLE.CUSTOMER, SUM(ORDER_TABLE.QUANTITY) AS QUANTITY 
FROM CUSTOMER_TABLE JOIN ORDER_TABLE 
ON CUSTOMER_TABLE.INVOICE_ID = ORDER_TABLE.INVOICE_ID
GROUP BY CUSTOMER ORDER BY CUSTOMER DESC LIMIT 1;

/* 8. WHICH BRANCH MAKES HIGHEST REVENUE? */
SELECT CUSTOMER_TABLE.BRANCH, SUM(ORDER_TABLE.TOTAL) AS REVENUE
FROM CUSTOMER_TABLE LEFT JOIN ORDER_TABLE
ON  CUSTOMER_TABLE.INVOICE_ID = ORDER_TABLE.INVOICE_ID
GROUP BY BRANCH ORDER BY REVENUE DESC LIMIT 1;

